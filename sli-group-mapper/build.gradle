import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'eea.buildtag'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'eea.appsuite'
apply plugin: 'eclipse'

ext {
    avroVersion = '1.8.1' 
    parquetVersion = '1.9.0'
    droolsVersion = '5.6.0.Final'
    antlrVersion = '3.3'
    hiveVersion = '1.2.2'
    janinoVersion = '2.5.16'
    mvel2Version = '2.1.8.Final'
    parquetFormatVersion = '2.3.1'
    mrunitVersion = '1.1.0'
}

dependencies {

    compile swcm.'ark-core'.dep
    compile swcm.'hadoop-client'.dep
    compile project(':function-library')
    compile swcm.'group-mapper-lib'.dep, { transitive = false }
    compile swcm.'esr'.dep
    compile swcm.'ref-data-lib'.dep
    compile swcm.'drools-core'.dep

    compile name: 'parquet-avro',      group: 'org.apache.parquet', version: "${parquetVersion}"
    compile name: 'avro',              group: 'org.apache.avro',    version: "${avroVersion}"
    compile name: 'avro-mapred',       group: 'org.apache.avro',    version: "${avroVersion}"
    compile group: 'org.apache.hive', name: 'hive-serde', version: "${hiveVersion}"
    compile name: 'parquet-hadoop',    group: 'org.apache.parquet', version: "${parquetVersion}"

  if (Os.isFamily(Os.FAMILY_WINDOWS))
  {
  runtime group: 'hadoop-patch', name: "hadoop-patch", version: '1.0'
  }


    appSuiteJava jar.outputs.files

    appSuiteJava swcm.'esr'.dep, { transitive = false }
    appSuiteJava swcm.'common'.dep, { transitive = false }
    appSuiteJava swcm.'function-library'.dep, { transitive = false }

    appSuiteJava swcm.'commons-lang3'.dep, { transitive = false }
    appSuiteJava name: 'parquet-avro',      group: 'org.apache.parquet', version: "${parquetVersion}", { transitive = false }
    appSuiteJava name: 'avro',              group: 'org.apache.avro',    version: "${avroVersion}", { transitive = false }
    appSuiteJava name: 'avro-mapred',       group: 'org.apache.avro',    version: "${avroVersion}", { transitive = false }
    appSuiteJava name: 'parquet-common',      group: 'org.apache.parquet', version: "${parquetVersion}", { transitive = false }
    appSuiteJava name: 'parquet-column',      group: 'org.apache.parquet', version: "${parquetVersion}", { transitive = false }
    appSuiteJava name: 'parquet-hadoop',      group: 'org.apache.parquet', version: "${parquetVersion}", { transitive = false }
    appSuiteJava name: 'parquet-format',      group: 'org.apache.parquet', version: "${parquetFormatVersion}", { transitive = false }
    appSuiteJava name: 'parquet-encoding',      group: 'org.apache.parquet', version: "${parquetVersion}", { transitive = false }
    appSuiteJava group: 'org.apache.hive', name: 'hive-serde', version: "${hiveVersion}", { transitive = false }
    appSuiteJava group: 'org.drools', name: 'drools-compiler', version: "${droolsVersion}-mapr", { transitive = false }
    appSuiteJava swcm.'drools-core'.dep, { transitive = false }
    appSuiteJava swcm.'drools-verifier'.dep, { transitive = false }
    appSuiteJava swcm.'knowledge-api'.dep, { transitive = false }
    appSuiteJava group: 'org.drools', name: 'knowledge-internal-api', version: "${droolsVersion}", { transitive = false }
    appSuiteJava group: 'org.codehaus.janino', name: 'janino', version: "${janinoVersion}", { transitive = false }
    appSuiteJava group: 'org.mvel', name: 'mvel2', version: "${mvel2Version}", { transitive = false }
    appSuiteJava group: 'org.antlr', name: 'antlr-runtime', version: "${antlrVersion}", { transitive = false }
    appSuiteJava swcm.'args4j'.dep, { transitive = false }


    appSuiteInitCfg fileTree( dir: 'src/main/resources/app_config' )
    appSuiteInitCfg files("src/main/resources/log4j.xml")
    appSuiteResources fileTree( dir: 'src/main/resources/app_config' )
    appSuiteResources files("src/main/resources/log4j.xml")



   //if (Os.isFamily(Os.FAMILY_WINDOWS)) {
  //runtime group: 'hadoop-patch', name: "hadoop-patch", version: '1.0'
   //}

   testCompile group: 'junit', name: 'junit', version:'4.10'
   testCompile ('org.mockito:mockito-all:1.9.5')
   testCompile ('org.powermock:powermock-module-junit4:1.5.1')
   testCompile ('org.powermock:powermock-api-mockito:1.5.1')
   testCompile ('org.apache.mrunit:mrunit:1.1.0:hadoop2')

}

test {
    exclude '**'
    minHeapSize = "512m"
    maxHeapSize = "2048m"
    jvmArgs '-XX:MaxPermSize=512m'
}

configurations {
    suite
}

publishing {
    publications {
        appSuite(MavenPublication) {
            artifact packageSuite
        }
    }
    repositories {
        maven {
            name "localBuild"
            url "file://${repoRoot}/artifacts"
        }
    }
}

artifactoryPublish {
  publications('appSuite')
  publishIvy = false
}